@attribute [Authorize]

@inject UnitOfWork unitOfWork;

<MudTh Style="background-color:inherit;">
    <div class="content-align" style="padding-right:20px">
        <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Size="Size.Small" Style="margin-right:1px"/>
        @matchup.GameTime.Value.DayOfWeekLv() @matchup.GameTime.Value.ToString("MM.dd")
    </div>
    <div class="content-align" style="padding-right:20px">
        <MudIcon Icon="@Icons.Material.Filled.AccessTime" Size="Size.Small" />
        @matchup.GameTime.Value.ToString("HH:mm")
    </div>
    <div class="content-align" style="padding-right:20px">
        <span class="fi fi-@GetCountryCode(@matchup.HomeTeamId)" style="width:30px;height:30px"></span>
        &zwnj : &zwnj;
        <span class="fi fi-@GetCountryCode(@matchup.GuestTeamId)" style="width:30px;height:30px"></span>
    </div>

    @if (matchup.HomeTeamScore == null)
    {
        <div class="content-align" style="padding-right:20px">
            ? - ?
        </div>
    }
    else
    {
        <div class="content-align" style="padding-right:20px">
            @matchup.HomeTeamScore : @matchup.GuestTeamScore
        </div>
    }
</MudTh>

@code {
    [Parameter]
    public Matchup matchup { get; set; }

    public string GetCountryCode(int id)
    {
        return unitOfWork.CountryRepository.GetByIdAsync(id).Result.FlagCode.ToLower();
    }
}